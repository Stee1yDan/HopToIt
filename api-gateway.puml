@startuml
left to right direction
class me.hoptoit.apigateway.ApiGatewayApplication {
+ {static} void main(String[])
}

class me.hoptoit.apigateway.filter.FilterFactory {
- JwtService jwtService
- WebClient.Builder webClient
+ RoleFilter getRoleFilter(Role)
+ AuthFilter getAuthFilter()
+ AuthUserFilter getAuthUserFilter()
}


class me.hoptoit.apigateway.config.RouteConfig {
- FilterFactory filterFactory
+ RouteLocator myRoutes(RouteLocatorBuilder)
}


class me.hoptoit.apigateway.config.JwtService {
- String secretKey
+ String extractUsername(String)
+ T extractClaim(String,Function<Claims,T>)
- Date extractExpiration(String)
- Claims extractAllClaims(String)
- Key getSigningKey()
}


enum me.hoptoit.apigateway.user.Role {
+  USER
+  ADMIN
+  MANAGER
- Set<Permission> permissions
}

class me.hoptoit.apigateway.config.WebClientConfig {
+ WebClient.Builder loadBalancedWebClientBuilder()
}

class me.hoptoit.apigateway.filter.AuthUserFilter {
- WebClient webClient
+ Mono<Void> filter(ServerWebExchange,GatewayFilterChain)
# Mono<Void> onError(ServerWebExchange,HttpStatus)
# boolean authMissing(ServerHttpRequest)
}


enum me.hoptoit.apigateway.user.Permission {
+  ADMIN_READ
+  ADMIN_UPDATE
+  ADMIN_CREATE
+  ADMIN_DELETE
+  MANAGER_READ
+  MANAGER_UPDATE
+  MANAGER_CREATE
+  MANAGER_DELETE
- String permission
}

class me.hoptoit.apigateway.filter.AuthFilter {
- WebClient webClient
+ Mono<Void> filter(ServerWebExchange,GatewayFilterChain)
# Mono<Void> onError(ServerWebExchange,HttpStatus)
# boolean authMissing(ServerHttpRequest)
}


class me.hoptoit.apigateway.filter.RoleFilter {
- JwtService jwtService
- Role role
- WebClient webClient
+ Mono<Void> filter(ServerWebExchange,GatewayFilterChain)
# Mono<Void> onError(ServerWebExchange,HttpStatus)
}




org.springframework.cloud.gateway.filter.GatewayFilter <|.. me.hoptoit.apigateway.filter.AuthUserFilter: extends
org.springframework.cloud.gateway.filter.GatewayFilter <|.. me.hoptoit.apigateway.filter.AuthFilter: extends
org.springframework.cloud.gateway.filter.GatewayFilter <|.. me.hoptoit.apigateway.filter.RoleFilter: extends
me.hoptoit.apigateway.filter.FilterFactory <.. me.hoptoit.apigateway.config.RouteConfig: injects
me.hoptoit.apigateway.filter.AuthUserFilter ..> me.hoptoit.apigateway.config.WebClientConfig: injects
me.hoptoit.apigateway.filter.AuthFilter ..> me.hoptoit.apigateway.config.WebClientConfig: injects
me.hoptoit.apigateway.filter.RoleFilter ..> me.hoptoit.apigateway.config.WebClientConfig: injects
me.hoptoit.apigateway.filter.RoleFilter ..> me.hoptoit.apigateway.config.JwtService: injects
@enduml